# X-Road Central Service - Multi-Host Deployment
# Deploy this on the Central Server machine

version: '3.8'

networks:
  xroad-central-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

volumes:
  ca-volume:

services:
  # Central Server
  cs:
    build:
      context: ../../centralserver
      dockerfile: Dockerfile
      args:
        PACKAGE_SOURCE: ${PACKAGE_SOURCE:-external}
    container_name: cs
    hostname: cs
    environment:
      - XROAD_TOKEN_PIN=${CS_TOKEN_PIN:-Secret1234}
    networks:
      xroad-central-net:
        ipv4_address: 172.30.0.10
    ports:
      - "4000:4000"   # Web UI (HTTPS)
      - "80:80"       # HTTP
      - "5432:5432"   # PostgreSQL (for management SS)
    volumes:
      - /etc/xroad/cs:/etc/xroad
      - /var/lib/xroad/cs:/var/lib/xroad
      - /var/lib/postgresql/cs:/var/lib/postgresql/16/main
    healthcheck:
      interval: 5s
      retries: 40
      test: ["CMD", "curl", "-f", "-k", "https://localhost:4000"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 512M
        limits:
          memory: 2560M

  # Management Security Server (runs on same machine as CS)
  ss0:
    build:
      context: ../../securityserver
      dockerfile: Dockerfile
      args:
        PACKAGE_SOURCE: ${PACKAGE_SOURCE:-external}
    container_name: ss0
    hostname: ss0
    environment:
      - XROAD_TOKEN_PIN=${SS0_TOKEN_PIN:-Secret1234}
      - PROXY_JMX_PORT=4299
      - SIGNER_JMX_PORT=4298
    networks:
      xroad-central-net:
        ipv4_address: 172.30.0.20
    ports:
      - "4200:4000"   # Web UI (HTTPS)
      - "8080:8080"   # Proxy HTTP
      - "8443:8443"   # Proxy HTTPS
      - "5500:5500"   # Message exchange
      - "5577:5577"   # OCSP
    volumes:
      - /etc/xroad/ss0:/etc/xroad
      - /var/lib/xroad/ss0:/var/lib/xroad
      - /var/lib/postgresql/ss0:/var/lib/postgresql/16/main
    depends_on:
      cs:
        condition: service_healthy
    healthcheck:
      interval: 5s
      retries: 40
      test: ["CMD", "curl", "-f", "-k", "https://localhost:4000"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 512M
        limits:
          memory: 2560M

  # Test CA
  testca:
    build:
      context: ../../testca
      dockerfile: Dockerfile
    container_name: testca
    hostname: testca
    networks:
      xroad-central-net:
        ipv4_address: 172.30.0.30
    ports:
      - "8888:8888"  # OCSP
      - "8899:8899"  # TSA
      - "8887:8887"  # ACME
    volumes:
      - ca-volume:/home/ca/certs
    healthcheck:
      interval: 5s
      retries: 40
      test: ["CMD", "curl", "-f", "-k", "http://localhost:8888/testca/certs"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 32M
        limits:
          memory: 512M

  # Mail server for notifications
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    hostname: mailpit
    networks:
      xroad-central-net:
        ipv4_address: 172.30.0.40
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    volumes:
      - ./testmail:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_REQUIRE_STARTTLS: 1
      MP_SMTP_TLS_CERT: /data/mailpit_cert.pem
      MP_SMTP_TLS_KEY: /data/mailpit_key.pem
      MP_SMTP_AUTH_FILE: /data/password_file
    restart: unless-stopped

  # Example SOAP Service
  issoap:
    build:
      context: ../../test-services/example-adapter
      dockerfile: Dockerfile
    container_name: issoap
    hostname: issoap
    networks:
      xroad-central-net:
        ipv4_address: 172.30.0.50
    ports:
      - "4600:8080"
    healthcheck:
      interval: 5s
      retries: 40
      test: ["CMD", "curl", "-f", "-k", "http://localhost:8080/example-adapter/Endpoint?wsdl"]
    entrypoint: ["java", "-Xms64m", "-Xmx256m", "-jar", "/example-adapter.war"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 512M

  # Example REST Service (Wiremock)
  isrest:
    image: wiremock/wiremock:latest
    container_name: isrest
    hostname: isrest
    networks:
      xroad-central-net:
        ipv4_address: 172.30.0.60
    ports:
      - "4500:8080"
    volumes:
      - ../../xrd-dev-stack/wiremock_mappings:/home/wiremock/mappings
    healthcheck:
      interval: 5s
      retries: 40
      test: ["CMD", "curl", "-f", "-k", "http://localhost:8080/__admin/health"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 256M

  # Setup/Initialization service
  hurl:
    build:
      context: ../../../development/hurl
      dockerfile: ./Dockerfile
    container_name: hurl-setup
    networks:
      xroad-central-net:
    volumes:
      - ca-volume:/hurl-files/ca
      - ./scenarios:/hurl-src/scenarios
    depends_on:
      cs:
        condition: service_healthy
      testca:
        condition: service_healthy
      ss0:
        condition: service_healthy
      issoap:
        condition: service_healthy
      isrest:
        condition: service_healthy
    command: >
      --insecure
      --variables-file /hurl-src/scenarios/vars.env
      --file-root /hurl-files
      /hurl-src/scenarios/setup-central.hurl
      --very-verbose
      --retry 12
      --retry-interval 10000
    deploy:
      resources:
        reservations:
          memory: 24M
        limits:
          memory: 128M

